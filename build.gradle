plugins {
    id 'nebula.netflixoss' version '2.2.10'
    id 'nebula.provided-base' version '2.2.2'
}

version = "2.3.1"

ext.githubProjectName = rootProject.name

apply plugin: 'java'

release {
    tagStrategy {
        prefixNameWithV = false
    }
}

nebulaRelease {
    addReleaseBranchPattern(/(release(-|\/))?\d+(\.\d+)?\.(x|\d+)/)
}

allprojects {
    clean {
        delete 'genie-db'
        delete 'derby.log'
    }
}

subprojects {
    apply plugin: 'nebula.netflixoss'
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'
    apply plugin: 'pmd'
    apply plugin: 'jacoco'
    apply plugin: 'nebula.provided-base'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    group = "com.netflix.${githubProjectName}"

    repositories {
        jcenter()
        mavenLocal()
    }

    configurations {
        all*.exclude group: "javax.servlet", module: "servlet-api"
    }

    dependencies {
        /*******************************
         * Compile Dependencies
         *******************************/

        compile("org.apache.commons:commons-lang3:${commons_lang3_version}")
        compile("org.slf4j:slf4j-log4j12:${slf4j_log4j12_version}")

        /*******************************
         * Provided Dependencies
         *******************************/

        /*******************************
         * Runtime Dependencies
         *******************************/

        /*******************************
         * Test Dependencies
         *******************************/

        // JUnit
        testCompile("junit:junit:${junit_version}")

        // Mockito
        testCompile("org.mockito:mockito-core:${mockito_version}")
    }

    checkstyle {
        configFile = new File(project.parent.projectDir, "codequality/checkstyle/checkstyle.xml")
    }

    findbugs {
        excludeFilter = new File(project.parent.projectDir, "codequality/findbugs/excludeFilter.xml")
    }

    tasks.withType(Pmd) {
        reports.html.enabled true
    }

    test {
        jacoco {
            excludes = ['com/netflix/genie/common/model/*_*']
        }
    }

    jacocoTestReport {
        doFirst {
            classDirectories = fileTree(dir: "${buildDir}/classes/main/").exclude(['com/netflix/genie/common/model/*_*'])
        }
        reports {
            xml.enabled = true
        }
    }
}
