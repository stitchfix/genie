plugins {
    id 'nebula.provided-base' version '2.2.2'
    id "com.jfrog.artifactory" version "4.4.0"
}


version = "2.3.6"

ext.githubProjectName = rootProject.name

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'


allprojects {
    clean {
        delete 'genie-db'
        delete 'derby.log'
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'checkstyle'
    apply plugin: 'findbugs'
    apply plugin: 'pmd'
    apply plugin: 'jacoco'
    apply plugin: 'nebula.provided-base'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.artifactory'

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    group = "com.netflix.${githubProjectName}"
    version = rootProject.version

    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
    }

    configurations {
        all*.exclude group: "javax.servlet", module: "servlet-api"
    }

    dependencies {

        /*******************************
         * Compile Dependencies
         *******************************/

        compile("org.apache.commons:commons-lang3:${commons_lang3_version}")
        compile("org.slf4j:slf4j-log4j12:${slf4j_log4j12_version}")

        /*******************************
         * Provided Dependencies
         *******************************/

        /*******************************
         * Runtime Dependencies
         *******************************/

        /*******************************
         * Test Dependencies
         *******************************/

        // JUnit
        testCompile("junit:junit:${junit_version}")

        // Mockito
        testCompile("org.mockito:mockito-core:${mockito_version}")
    }

    checkstyle {
        configFile = new File(project.parent.projectDir, "codequality/checkstyle/checkstyle.xml")
    }

    findbugs {
        excludeFilter = new File(project.parent.projectDir, "codequality/findbugs/excludeFilter.xml")
    }

    tasks.withType(Pmd) {
        reports.html.enabled true
    }

    test {
        jacoco {
            excludes = ['com/netflix/genie/common/model/*_*']
        }
    }

    jacocoTestReport {
        doFirst {
            classDirectories = fileTree(dir: "${buildDir}/classes/main/").exclude(['com/netflix/genie/common/model/*_*'])
        }
        reports {
            xml.enabled = true
        }
    }

    // Added to publish WAR to artifactory:
    artifactory {
        contextUrl = 'http://artifactory.vertigo.stitchfix.com/artifactory'
        publish {
            repository {
                repoKey = 'releases' // The Artifactory repository key to publish to
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
            defaults {
                // Reference to Gradle publications defined in the build script.
                // This is how we tell the Artifactory Plugin which artifacts should be
                // published to Artifactory.
                publications('mavenJava')
                publishArtifacts = true
                // Properties to be attached to the published artifacts.
                properties = ['qa.level': 'basic', 'dev.team' : 'core']
                // Publish generated POM files to Artifactory (true by default)
                publishPom = true
            }
        }
    }

}
