<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright 2015 Netflix, Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
            http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="operationRetryPolicy" class="org.springframework.retry.policy.ExceptionClassifierRetryPolicy">
        <property name="policyMap">
            <map>
                <entry key="org.springframework.orm.jpa.JpaOptimisticLockingFailureException">
                    <bean class="org.springframework.retry.policy.SimpleRetryPolicy">
                        <property name="maxAttempts" value="3"/>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="operationRetryTemplate" class="org.springframework.retry.support.RetryTemplate">
        <property name="retryPolicy" ref="operationRetryPolicy"/>
        <property name="backOffPolicy">
            <bean class="org.springframework.retry.backoff.FixedBackOffPolicy">
                <property name="backOffPeriod" value="1000"/>
            </bean>
        </property>
    </bean>

    <bean id="operationRetryAdvice" class="org.springframework.retry.interceptor.RetryOperationsInterceptor">
        <property name="retryOperations" ref="operationRetryTemplate"/>
    </bean>

    <aop:config>
        <aop:advisor advice-ref="operationRetryAdvice"
                     pointcut="execution(* com.netflix.genie.server.services.impl.jpa.JobServiceJPAImpl.setUpdateTime(..))"
                     order="-1"/>
        <aop:advisor advice-ref="operationRetryAdvice"
                     pointcut="execution(* com.netflix.genie.server.services.impl.jpa.JobServiceJPAImpl.unQueueOldestJob())"
                     order="-1"/>
    </aop:config>

</beans>